//---------------------------------------------------------------------------
#include <vcl.h>
#include <System.hpp>
#pragma hdrstop

#include "recUnit.h"
#pragma package(smart_init)
#include "mainUnit.h"
#include "globals.h"
//---------------------------------------------------------------------------

//   Important: Methods and properties of objects in VCL can only be
//   used in a method called using Synchronize, for example:
//
//      Synchronize(&UpdateCaption);
//
//   where UpdateCaption could look like:
//
//      void __fastcall recUnit::UpdateCaption()
//      {
//        Form1->Caption = "Updated in a thread";
//      }
//---------------------------------------------------------------------------

__fastcall recUnit::recUnit(bool CreateSuspended)
	: TThread(CreateSuspended)
{

}
//---------------------------------------------------------------------------

__fastcall recUnit::~recUnit()
{
	thread_started = false;
}
//---------------------------------------------------------------------------

void __fastcall recUnit::Execute()
{
	NameThreadForDebugging(System::String(L"record"));
	//---- Place thread code here ----

	thread_stop = false;
	thread_started = false;
	TDateTime dateTime;
	UnicodeString time = dateTime.CurrentDateTime().FormatString("hhMMss");
	UnicodeString date = dateTime.CurrentDateTime().FormatString("yyyymmdd");
	if( !DirectoryExists("records/") ){
		AnsiString dir = "records/";
		CreateDirectoryA(dir.c_str(),NULL);
	}
	switch(mainForm->AppMode){
		case 1:{
			if( !DirectoryExists("records/Contact/") ){
				AnsiString dir = "records/Contact/";
				CreateDirectoryA(dir.c_str(),NULL);
			}
			if(!DirectoryExists("records/Contact/"+ date + "/")){
				AnsiString dir = "records/Contact/" + date + "/";
				CreateDirectoryA(dir.c_str(),NULL);
			}
			source = "records/Contact/" + date + "/" + time + ".afm";
			break;
		}
		case 2:{
			if( !DirectoryExists("records/NonContact/") ){
				AnsiString dir = "records/NonContact/";
				CreateDirectoryA(dir.c_str(),NULL);
			}
			if(!DirectoryExists("records/NonContact/"+ date + "/")){
				AnsiString dir = "records/NonContact/" + date + "/";
				CreateDirectoryA(dir.c_str(),NULL);
			}
			source = "records/NonContact/" + date + "/" + time + ".afm";
			break;
        }
		default:
			break;
	}


	file = new TFileStream(source,fmCreate);
	my_rec_queueClass = new rec_queueClass(1000);
	thread_started = true;

	while(1){
		while(thread_started){
			if(!(my_rec_queueClass->isEmpty())){
				DynamicArray<Byte> tmp = my_rec_queueClass->peek();
				file->WriteData(tmp,tmp.Length);
				my_rec_queueClass->dequeue();
			}
			if(finishing){
				while(!(my_rec_queueClass->isEmpty())){
					DynamicArray<Byte> tmp = my_rec_queueClass->peek();
					file->WriteData(tmp,tmp.Length);
					my_rec_queueClass->dequeue();
				}
				file->Free();
				thread_started = false;
				thread_stop = true;

                return;
			}
//			Application->ProcessMessages();
		}
	}
}
//---------------------------------------------------------------------------

void recUnit::StopRecod()
{
	finishing = true;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
