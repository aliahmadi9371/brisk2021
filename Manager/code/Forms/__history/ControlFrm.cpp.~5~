//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "ControlFrm.h"
#include "mainUnit.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "AdvBadge"
#pragma link "AdvEdit"
#pragma link "AdvCombo"
#pragma resource "*.dfm"
TPanelForm *PanelForm;
//---------------------------------------------------------------------------
__fastcall TPanelForm::TPanelForm(TComponent* Owner)
	: TForm(Owner)
{
	resolution = 0;
	start = false;
	approached = false;
	FarNear = false;
	StatusFarNear = 0;
	fast = false;
	CountFarNear = 0;

	AdvComboBoxResolution->ItemIndex = 0;
	myUdpDataSendClass = NULL;
	myUdpDataSendClass = new UdpDataSendClass(NULL);
	scanning = false;
}
//---------------------------------------------------------------------------
void __fastcall TPanelForm::FormShow(TObject *Sender)
{
	if(!start){
		start = true;
	}
}
//---------------------------------------------------------------------------
void __fastcall TPanelForm::AdvBadgeButtonStartApproachClick(TObject *Sender)
{
	if(!approaching){
		AdvBadgeButtonStartApproach->Enabled = false;
		approaching = true;
		if(fast_checkbox->Checked){
			fast = true;
//			mainForm->RunApproach(0);
		}
		else{
			fast = false;
//			mainForm->RunApproach(1);
		}
//		mainForm->RunApproach(AdvEditApproachMode->Text.ToInt());
	}
	else
		AdvBadgeButtonStartApproach->Enabled = true;

}
//---------------------------------------------------------------------------
void __fastcall TPanelForm::AdvBadgeButtonStartScanClick(TObject *Sender)
{
	if(!scanning && mainForm->myCommandCreatorThread){
		scanning = true;
		EnableScanPanel(false);
		resolution = (int)pow((double) 2,( (double)(AdvComboBoxResolution->ItemIndex)+6 ) );
		TThread::Synchronize(mainForm->myCommandCreatorThread,StartScan);
	}
}
//---------------------------------------------------------------------------

void __fastcall TPanelForm::StartScan()
{
	mainForm->myCommandCreatorThread->StartScanClick();
}
//---------------------------------------------------------------------------
void __fastcall TPanelForm::AdvBadgeButtonStopScanClick(TObject *Sender)
{
	if(scanning){
		mainForm->myImagerThread->finish = true;
	}
}
//---------------------------------------------------------------------------

void __fastcall TPanelForm::SendPacket()
{
	mainForm->myUdpThread->SendBytes();
}
//---------------------------------------------------------------------------

int TPanelForm::getTcpPacketLine(int myMode)
{
	int ret = -1;
	switch (myMode) {
	case 1:
		ret = (resolution) * 3 * 2;
		break;
	case 2:
		ret = (resolution) * 3 * 2;
		break;
//	case 3:
//	case 4:
//	case 5:
//	case 6:
//	case 7:
//	case 8:
//	case 9:
	default:
		break;
	}
	return ret;
}
//---------------------------------------------------------------------------

void TPanelForm::EnableScanPanel(bool enabled)
{
	if(enabled){
		AdvBadgeButtonStartScan->Enabled = true;
		AdvEditAngle->Enabled = true;
		AdvEditCenterX->Enabled = true;
		AdvEditCenterY->Enabled = true;
		AdvEditOverScan->Enabled = true;
		AdvEditRange->Enabled = true;
		AdvEditSpeed->Enabled = true;
		AdvComboBoxResolution->Enabled = true;
	}
	else{
    	AdvBadgeButtonStartScan->Enabled = false;
		AdvEditAngle->Enabled = false;
		AdvEditCenterX->Enabled = false;
		AdvEditCenterY->Enabled = false;
		AdvEditOverScan->Enabled = false;
		AdvEditRange->Enabled = false;
		AdvEditSpeed->Enabled = false;
		AdvComboBoxResolution->Enabled = false;
	}
}
//---------------------------------------------------------------------------

//void __fastcall TPanelForm::FinalizingImage()
//{
//	mainForm->myImagerThread->CloseImaging();
//}
////---------------------------------------------------------------------------
